{"ast":null,"code":"var _jsxFileName = \"/Users/maxime/ChronoLithe/chronolithe/src/components/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Carousel = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    // Charger les images disponibles dynamiquement\n    const availableImages = [];\n    const basePath = \"/images/\";\n\n    // Ajouter manuellement les images disponibles dans le dossier public/images\n    [\"image1.jpg\", \"image2.jpg\", \"image3.jpg\"].forEach(fileName => {\n      const img = new Image();\n      img.src = `${basePath}${fileName}`;\n      img.onload = () => availableImages.push(img.src); // Ajouter si l'image existe\n    });\n    setImages(availableImages);\n  }, []);\n  const goToPrevious = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? images.length - 1 : prevIndex - 1);\n  };\n  const goToNext = () => {\n    setCurrentIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1);\n  };\n  const goToImage = index => {\n    setCurrentIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-images\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Slide ${index}`,\n        className: `carousel-image ${index === currentIndex ? \"active\" : \"\"}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), images.length > 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-button left\",\n        onClick: goToPrevious,\n        children: \"\\u276E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-button right\",\n        onClick: goToNext,\n        children: \"\\u276F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-dots\",\n      children: images.map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `dot ${index === currentIndex ? \"active\" : \"\"}`,\n        onClick: () => goToImage(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"egAugckjpBOUv+M+WxVraX6X2eE=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Carousel","_s","images","setImages","currentIndex","setCurrentIndex","availableImages","basePath","forEach","fileName","img","Image","src","onload","push","goToPrevious","prevIndex","length","goToNext","goToImage","index","className","children","map","image","alt","_jsxFileName","lineNumber","columnNumber","onClick","_","_c","$RefreshReg$"],"sources":["/Users/maxime/ChronoLithe/chronolithe/src/components/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Style.css\";\n\nconst Carousel = () => {\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    // Charger les images disponibles dynamiquement\n    const availableImages = [];\n    const basePath = \"/images/\";\n\n    // Ajouter manuellement les images disponibles dans le dossier public/images\n    [\"image1.jpg\", \"image2.jpg\", \"image3.jpg\"].forEach((fileName) => {\n      const img = new Image();\n      img.src = `${basePath}${fileName}`;\n      img.onload = () => availableImages.push(img.src); // Ajouter si l'image existe\n    });\n\n    setImages(availableImages);\n  }, []);\n\n  const goToPrevious = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex === 0 ? images.length - 1 : prevIndex - 1\n    );\n  };\n\n  const goToNext = () => {\n    setCurrentIndex((prevIndex) =>\n      prevIndex === images.length - 1 ? 0 : prevIndex + 1\n    );\n  };\n\n  const goToImage = (index) => {\n    setCurrentIndex(index);\n  };\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"carousel-images\">\n        {images.map((image, index) => (\n          <img\n            key={index}\n            src={image}\n            alt={`Slide ${index}`}\n            className={`carousel-image ${\n              index === currentIndex ? \"active\" : \"\"\n            }`}\n          />\n        ))}\n      </div>\n      {images.length > 1 && (\n        <>\n          <button className=\"carousel-button left\" onClick={goToPrevious}>\n            &#10094;\n          </button>\n          <button className=\"carousel-button right\" onClick={goToNext}>\n            &#10095;\n          </button>\n        </>\n      )}\n      <div className=\"carousel-dots\">\n        {images.map((_, index) => (\n          <span\n            key={index}\n            className={`dot ${index === currentIndex ? \"active\" : \"\"}`}\n            onClick={() => goToImage(index)}\n          ></span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}